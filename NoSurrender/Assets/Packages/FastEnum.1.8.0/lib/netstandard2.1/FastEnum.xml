<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FastEnum</name>
    </assembly>
    <members>
        <member name="T:FastEnumUtility.FastEnum">
            <summary>
            Provides high performance utilitis for enum type.
            </summary>
            <summary>
            Provides high performance utilitis for enum type.
            </summary>
            <summary>
            Provides high performance utilitis for enum type.
            </summary>
        </member>
        <member name="M:FastEnumUtility.FastEnum.GetUnderlyingType``1">
            <summary>
            Returns the underlying type of the specified enumeration.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.GetValues``1">
            <summary>
            Retrieves an array of the values of the constants in a specified enumeration.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.GetNames``1">
            <summary>
            Retrieves an array of the names of the constants in a specified enumeration.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.GetName``1(``0)">
            <summary>
            Retrieves the name of the constant in the specified enumeration type that has the specified value.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <param name="value"></param>
            <returns>A string containing the name of the enumerated constant in enumType whose value is value; or null if no such constant is found.</returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.GetMembers``1">
            <summary>
            Retrieves an array of the member information of the constants in a specified enumeration.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.GetMember``1(``0)">
            <summary>
            Retrieves the member information of the constants in a specified enumeration.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:FastEnumUtility.NotFoundException"></exception>
        </member>
        <member name="M:FastEnumUtility.FastEnum.GetMinValue``1">
            <summary>
            Returns the minimum value.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.GetMaxValue``1">
            <summary>
            Returns the maximum value.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsEmpty``1">
            <summary>
            Returns whether no fields in a specified enumeration.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsContinuous``1">
            <summary>
            Returns whether the values of the constants in a specified enumeration are continuous.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsFlags``1">
            <summary>
            Returns whether the <see cref="T:System.FlagsAttribute"/> is defined.
            </summary>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(``0)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(System.String)">
            <summary>
            Returns an indication whether a constant with a specified name exists in a specified enumeration.
            </summary>
            <param name="name"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.Parse``1(System.String)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.Parse``1(System.String,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
            A parameter specifies whether the operation is case-insensitive.
            </summary>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.TryParse``1(System.String,``0@)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="value"></param>
            <param name="result"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns>true if the value parameter was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.TryParse``1(System.String,System.Boolean,``0@)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
            A parameter specifies whether the operation is case-sensitive.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="result"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns>true if the value parameter was converted successfully; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.TryParseInternal``1(System.String,System.Boolean,``0@)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
            A parameter specifies whether the operation is case-sensitive.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="result"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsNumeric(System.Char)">
            <summary>
            Checks whether specified charactor is number.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.TryParseName``1(System.String,System.Boolean,``0@)">
            <summary>
            Converts the string representation of the name of one or more enumerated constants to an equivalent enumerated object.
            A parameter specifies whether the operation is case-sensitive.
            The return value indicates whether the conversion succeeded.
            </summary>
            <param name="name"></param>
            <param name="ignoreCase"></param>
            <param name="result"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.ToString``1(``0)">
            <summary>
            Converts the specified value to its equivalent string representation.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(System.SByte)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(System.Byte)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(System.Int16)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(System.UInt16)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(System.Int32)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(System.UInt32)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(System.Int64)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnum.IsDefined``1(System.UInt64)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="T:FastEnumUtility.FastEnumExtensions">
            <summary>
            Provides <see cref="T:System.Enum"/> extension methods.
            </summary>
            <summary>
            Provides <see cref="T:System.Enum"/> extension methods.
            </summary>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToMember``1(``0)">
            <summary>
            Converts to the member information of the constant in the specified enumeration value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToName``1(``0)">
            <summary>
            Converts to the name of the constant in the specified enumeration value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns>A string containing the name of the enumerated constant in enumType whose value is value; or null if no such constant is found.</returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.FastToString``1(``0)">
            <summary>
            Converts the specified value to its equivalent string representation.
            </summary>
            <param name="value"></param>
            <typeparam name="T">Enum type</typeparam>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.IsDefined``1(``0)">
            <summary>
            Returns an indication whether a constant with a specified value exists in a specified enumeration.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.GetEnumMemberValue``1(``0,System.Boolean)">
            <summary>
            Gets the <see cref="P:System.Runtime.Serialization.EnumMemberAttribute.Value"/> of specified enumration member.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="throwIfNotFound"></param>
            <returns></returns>
            <exception cref="T:FastEnumUtility.NotFoundException"></exception>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.GetLabel``1(FastEnumUtility.Member{``0},System.Int32,System.Boolean)">
            <summary>
            Gets the <see cref="P:FastEnumUtility.LabelAttribute.Value"/> of specified enumration member.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="member"></param>
            <param name="index"></param>
            <param name="throwIfNotFound"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:FastEnumUtility.NotFoundException"></exception>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.GetLabel``1(``0,System.Int32,System.Boolean)">
            <summary>
            Gets the <see cref="P:FastEnumUtility.LabelAttribute.Value"/> of specified enumration member.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="index"></param>
            <param name="throwIfNotFound"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToSByte``1(``0)">
            <summary>
            Converts to the 8-bit signed integer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToByte``1(``0)">
            <summary>
            Converts to the 8-bit unsigned integer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToInt16``1(``0)">
            <summary>
            Converts to the 16-bit signed integer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToUInt16``1(``0)">
            <summary>
            Converts to the 16-bit unsigned integer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToInt32``1(``0)">
            <summary>
            Converts to the 32-bit signed integer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToUInt32``1(``0)">
            <summary>
            Converts to the 32-bit unsigned integer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToInt64``1(``0)">
            <summary>
            Converts to the 64-bit signed integer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.FastEnumExtensions.ToUInt64``1(``0)">
            <summary>
            Converts to the 64-bit unsigned integer.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:FastEnumUtility.Internals.EnumerableExtensions">
            <summary>
            Provides <see cref="T:System.Collections.Generic.IEnumerable`1"/> extension methods.
            </summary>
            <summary>
            Provides <see cref="T:System.Collections.Generic.IEnumerable`1"/> extension methods.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.CountIfMaterialized``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Gets collection count if <paramref name="source"/> is materialized, otherwise null.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.Materialize``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Gets collection if <paramref name="source"/> is materialized, otherwise ToArray();ed collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="nullToEmpty"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenDictionary``2(System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenStringKeyDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenStringKeyDictionary`1"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenStringKeyDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{``0,``1})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenStringKeyDictionary`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenSByteKeyDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.SByte})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenSByteKeyDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.SByte},System.Func{``0,``1})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenByteKeyDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Byte})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenByteKeyDictionary`1"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenByteKeyDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Byte},System.Func{``0,``1})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenByteKeyDictionary`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenInt16KeyDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int16})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenInt16KeyDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int16},System.Func{``0,``1})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenUInt16KeyDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt16})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenUInt16KeyDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt16},System.Func{``0,``1})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenInt32KeyDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenInt32KeyDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32},System.Func{``0,``1})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenUInt32KeyDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt32})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenUInt32KeyDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt32},System.Func{``0,``1})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenInt64KeyDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenInt64KeyDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64},System.Func{``0,``1})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenUInt64KeyDictionary``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt64})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1"/>.
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.EnumerableExtensions.ToFrozenUInt64KeyDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt64},System.Func{``0,``1})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1"/>.
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenDictionary`2">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.Create(System.Collections.Generic.IEnumerable{`1},System.Func{`1,`0})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,`0},System.Func{``0,`1})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.TryAddInternal(`0,`1,`1@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.GetValueOrDefault(`0,`1)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenDictionary`2.Item(`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenDictionary`2.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenDictionary`2.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenDictionary`2.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenDictionary`2.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenStringKeyDictionary`1">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            
            This class is string specialized <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.Create(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.String})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenStringKeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Func{``0,`0})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenStringKeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.TryAddInternal(System.String,`0,`0@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.GetValueOrDefault(System.String,`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.Item(System.String)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.ContainsKey(System.String)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.TryGetValue(System.String,`0@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenStringKeyDictionary`1.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenStringKeyDictionary`1"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            
            This class is sbyte specialized <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.Create(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.SByte})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.SByte},System.Func{``0,`0})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.TryAddInternal(System.SByte,`0,`0@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.GetValueOrDefault(System.SByte,`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.Item(System.SByte)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.ContainsKey(System.SByte)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.TryGetValue(System.SByte,`0@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenSByteKeyDictionary`1"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenByteKeyDictionary`1">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            
            This class is byte specialized <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.Create(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.Byte})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenByteKeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Byte},System.Func{``0,`0})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenByteKeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.TryAddInternal(System.Byte,`0,`0@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.GetValueOrDefault(System.Byte,`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.Item(System.Byte)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.ContainsKey(System.Byte)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.TryGetValue(System.Byte,`0@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenByteKeyDictionary`1.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenByteKeyDictionary`1"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            
            This class is short specialized <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.Create(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.Int16})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int16},System.Func{``0,`0})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.TryAddInternal(System.Int16,`0,`0@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.GetValueOrDefault(System.Int16,`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.Item(System.Int16)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.ContainsKey(System.Int16)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.TryGetValue(System.Int16,`0@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenInt16KeyDictionary`1"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            
            This class is ushort specialized <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.Create(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.UInt16})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt16},System.Func{``0,`0})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.TryAddInternal(System.UInt16,`0,`0@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.GetValueOrDefault(System.UInt16,`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.Item(System.UInt16)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.ContainsKey(System.UInt16)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.TryGetValue(System.UInt16,`0@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenUInt16KeyDictionary`1"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            
            This class is int specialized <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.Create(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.Int32})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32},System.Func{``0,`0})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.TryAddInternal(System.Int32,`0,`0@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.GetValueOrDefault(System.Int32,`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.Item(System.Int32)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.ContainsKey(System.Int32)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.TryGetValue(System.Int32,`0@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenInt32KeyDictionary`1"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            
            This class is uint specialized <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.Create(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.UInt32})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt32},System.Func{``0,`0})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.TryAddInternal(System.UInt32,`0,`0@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.GetValueOrDefault(System.UInt32,`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.Item(System.UInt32)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.ContainsKey(System.UInt32)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.TryGetValue(System.UInt32,`0@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenUInt32KeyDictionary`1"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            
            This class is long specialized <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.Create(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.Int64})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64},System.Func{``0,`0})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.TryAddInternal(System.Int64,`0,`0@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.GetValueOrDefault(System.Int64,`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.Item(System.Int64)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.ContainsKey(System.Int64)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.TryGetValue(System.Int64,`0@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenInt64KeyDictionary`1"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1">
            <summary>
            Provides a read-only dictionary that contents are fixed at the time of instance creation.
            </summary>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
            <remarks>
            Reference:
            https://github.com/neuecc/MessagePack-CSharp/blob/master/src/MessagePack.UnityClient/Assets/Scripts/MessagePack/Internal/ThreadsafeTypeKeyHashTable.cs
            
            This class is ulong specialized <see cref="T:FastEnumUtility.Internals.FrozenDictionary`2"/>.
            </remarks>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.#ctor(System.Int32,System.Single)">
            <summary>
            Creates instance.
            </summary>
            <param name="bucketSize"></param>
            <param name="loadFactor"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.Create(System.Collections.Generic.IEnumerable{`0},System.Func{`0,System.UInt64})">
            <summary>
            Creates a <see cref="T:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to a specified key selector function.
            </summary>
            <param name="source"></param>
            <param name="keySelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.UInt64},System.Func{``0,`0})">
            <summary>
             Creates a <see cref="T:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/> according to specified key selector and value selector functions.
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <param name="keySelector"></param>
            <param name="valueSelector"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.TryAddInternal(System.UInt64,`0,`0@)">
            <summary>
            Add element.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="resultingValue"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.CalculateCapacity(System.Int32,System.Single)">
            <summary>
            Calculates bucket capacity.
            </summary>
            <param name="collectionSize"></param>
            <param name="loadFactor"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.GetValueOrDefault(System.UInt64,`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary or the default value of the element type.
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.Item(System.UInt64)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>The element that has the specified key in the read-only dictionary.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.ContainsKey(System.UInt64)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.TryGetValue(System.UInt64,`0@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">
            When this method returns, the value associated with the specified key, if the key is found;
            otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.
            </param>
            <returns>true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/> interface contains an element that has the specified key; otherwise, false.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1.Entry">
            <summary>
            Represents <see cref="T:FastEnumUtility.Internals.FrozenUInt64KeyDictionary`1"/> entry.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.ReadOnlyArray`1">
            <summary>
            Provides the readonly array.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FastEnumUtility.Internals.ReadOnlyArray`1.#ctor(`0[])">
            <summary>
            Creates instance.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:FastEnumUtility.Internals.ReadOnlyArray`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.ReadOnlyArray`1.Item(System.Int32)">
            <summary>
            Gets the element at the specified index in the read-only list.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The element at the specified index in the read-only list.</returns>
        </member>
        <member name="P:FastEnumUtility.Internals.ReadOnlyArray`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.ReadOnlyArray`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FastEnumUtility.Internals.ReadOnlyArray`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:FastEnumUtility.Internals.ReadOnlyArray`1.Enumerator">
            <summary>
            Provides an enumerator as value type that iterates through the collection.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.ReadOnlyArray`1.RefEnumerator">
            <summary>
            Provides an enumerator as reference type that iterates through the collection.
            </summary>
        </member>
        <member name="T:FastEnumUtility.Internals.ReadOnlyArrayExtensions">
            <summary>
            Provides <see cref="T:FastEnumUtility.Internals.ReadOnlyArray`1"/> extension methods.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Internals.ReadOnlyArrayExtensions.ToReadOnlyArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.ReadOnlyArray`1"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:FastEnumUtility.Internals.ReadOnlyArrayExtensions.AsReadOnly``1(``0[])">
            <summary>
            Converts to <see cref="T:FastEnumUtility.Internals.ReadOnlyArray`1"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:FastEnumUtility.Internals.IUnderlyingOperation`1">
            <summary>
            Provides underlying type specified operation interface.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="T:FastEnumUtility.Internals.SByteOperation`1">
            <summary>
            Provides sbyte specified operation.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="T:FastEnumUtility.Internals.ByteOperation`1">
            <summary>
            Provides byte specified operation.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="T:FastEnumUtility.Internals.Int16Operation`1">
            <summary>
            Provides short specified operation.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="T:FastEnumUtility.Internals.UInt16Operation`1">
            <summary>
            Provides ushort specified operation.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="T:FastEnumUtility.Internals.Int32Operation`1">
            <summary>
            Provides int specified operation.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="T:FastEnumUtility.Internals.UInt32Operation`1">
            <summary>
            Provides uint specified operation.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="T:FastEnumUtility.Internals.Int64Operation`1">
            <summary>
            Provides long specified operation.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="T:FastEnumUtility.Internals.UInt64Operation`1">
            <summary>
            Provides ulong specified operation.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="T:FastEnumUtility.LabelAttribute">
            <summary>
            Provides the label annotaion to be tagged to enum type fields.
            </summary>
        </member>
        <member name="P:FastEnumUtility.LabelAttribute.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:FastEnumUtility.LabelAttribute.Index">
            <summary>
            Gets the index.
            </summary>
        </member>
        <member name="M:FastEnumUtility.LabelAttribute.#ctor(System.String,System.Int32)">
            <summary>
            Creates instance.
            </summary>
            <param name="value"></param>
            <param name="index"></param>
        </member>
        <member name="T:FastEnumUtility.Member`1">
            <summary>
            Represents the member information of the constant in the specified enumeration.
            </summary>
            <typeparam name="T">Enum type</typeparam>
        </member>
        <member name="P:FastEnumUtility.Member`1.Value">
            <summary>
            Gets the value of specified enumration member.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Member`1.Name">
            <summary>
            Gets the name of specified enumration member.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Member`1.FieldInfo">
            <summary>
            Gets the <see cref="T:System.Reflection.FieldInfo"/> of specified enumration member.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Member`1.EnumMemberAttribute">
            <summary>
            Gets the <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/> of specified enumration member.
            </summary>
        </member>
        <member name="P:FastEnumUtility.Member`1.Labels">
            <summary>
            Gets the labels of specified enumration member.
            </summary>
        </member>
        <member name="M:FastEnumUtility.Member`1.#ctor(System.String)">
            <summary>
            Creates instance.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:FastEnumUtility.Member`1.Deconstruct(System.String@,`0@)">
            <summary>
            Deconstruct into name and value.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="T:FastEnumUtility.Member`1.ValueComparer">
            <summary>
            Provides <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> by <see cref="P:FastEnumUtility.Member`1.Value"/>.
            </summary>
        </member>
        <member name="T:FastEnumUtility.NotFoundException">
            <summary>
            Represents an exception that is thrown when not found something.
            </summary>
        </member>
        <member name="M:FastEnumUtility.NotFoundException.#ctor(System.String)">
            <summary>
            Creates instance.
            </summary>
            <param name="message"></param>
        </member>
    </members>
</doc>
